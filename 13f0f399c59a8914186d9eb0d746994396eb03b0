{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "89b63784_08e8f023",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1976566
      },
      "writtenOn": "2023-04-19T08:17:47Z",
      "side": 1,
      "message": "Hi Jahim, we need to changes to be able to collect coverage from these tests. See b/276710489. I looked at the linked bug but I don\u0027t really understand the problem. Could you summarise it? Thanks.",
      "revId": "13f0f399c59a8914186d9eb0d746994396eb03b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dde8b502_2d1c66b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1903040
      },
      "writtenOn": "2023-04-19T23:18:20Z",
      "side": 1,
      "message": "using `test_suites` for the helper apps installs the helper apps in those suites and when you use `required` for a module, those required helper apps will be installed wherever this module is installed.\n\nWe prefer declaring this kind of dependency in the `data` field. when `data` field is used to declare dependencies, they are copied to the same folder as the test. This allow Tradefed to isolate test modules and enable features like partial download(we will only download dependencies that a test needs instead of everything that was included in the suites zip file).\n\nWhen you declare dependencies with `data` field, you don\u0027t need to separately use `test_suites` for the helper apps. They will be installed wherever the test module is installed.",
      "parentUuid": "89b63784_08e8f023",
      "revId": "13f0f399c59a8914186d9eb0d746994396eb03b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "450ea097_ef266825",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1976566
      },
      "writtenOn": "2023-04-20T21:02:22Z",
      "side": 1,
      "message": "Hi Jahin, thanks for the full explanation. Unfortunately, when we add the dep as data, the script copied over the non-coverage enabled apk. See log[1] with data config vs log[2] with `required + test_suites` config.\n\n@kunniu@google.com, are you aware of the java_test_host config we can use to allow us use `data` config and still copy the coverage-enabled apk in test_suites_x86_64_coverage?\n\n[1] https://android-build.googleplex.com/builds/build-details/9871123/targets/test_suites_x86_64_coverage : file logs/build.log\n[2] https://android-build.corp.google.com/build_explorer/artifacts_list/9974746/test_suites_x86_64_coverage/latest/",
      "parentUuid": "dde8b502_2d1c66b0",
      "revId": "13f0f399c59a8914186d9eb0d746994396eb03b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "571dc493_2d64ab15",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1750078
      },
      "writtenOn": "2023-04-24T11:07:11Z",
      "side": 1,
      "message": "I\u0027d be against this as this is what we originally had and didn\u0027t work as we intended.\n\nThe problem is that targets under `data` seems to be compiled without native-code coverage. Until that is fixed then we can\u0027t really migrate to using `data` as we risk losing coverage data.",
      "revId": "13f0f399c59a8914186d9eb0d746994396eb03b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17792c8b_c0740300",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1121894
      },
      "writtenOn": "2023-04-25T17:07:34Z",
      "side": 1,
      "message": "What\u0027s the status here ? I am not sure i understand the coverage thing, but what i see from build system standpoint is that your test doesn\u0027t declare that dependency and use it, which is straight up wrong and will be prevented soon.\n@joeo@google.com for input on what we are missing .\n\nDeclaring a dependency in data is the usual way of doing this. I don\u0027t see this CL as doing something outrageous. If you have additional scripts or things with incorrect assumption, could you take an AI to fix those ?",
      "parentUuid": "450ea097_ef266825",
      "revId": "13f0f399c59a8914186d9eb0d746994396eb03b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "042d06fc_43d8c9c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000701
      },
      "writtenOn": "2023-04-26T02:15:30Z",
      "side": 1,
      "message": "@yudiliu - This is soong build not roboleaf, but it does seem like coverage should propagate through the \u0027data\u0027 dependency.  Thoughts?",
      "revId": "13f0f399c59a8914186d9eb0d746994396eb03b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e79770_27695664",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1124746
      },
      "writtenOn": "2023-04-27T18:06:18Z",
      "side": 1,
      "message": "When you want to run code coverage on CI build you will have to explicitly specify the coverage flags in the gcl file for your build and test targets, so in this change if you remove mts-tethering from the test_suites, this module won\u0027t be built with coverage enabled, for example, this test_suites_x86_64_coverage target builds the listed modules with coverage flags enabled, with this change the module won\u0027t be built as part of mts, so it won have code coverage enabled: https://source.corp.google.com/piper///depot/google3/configs/wireless/android/busytown/platform/git_udc/git_udc-release.gcl;l\u003d2562",
      "parentUuid": "042d06fc_43d8c9c3",
      "revId": "13f0f399c59a8914186d9eb0d746994396eb03b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71a1c3fe_b16f5ca6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1121894
      },
      "writtenOn": "2023-04-27T18:17:26Z",
      "side": 1,
      "message": "But it\u0027s not removed ?\n\nthe cronet_net_tester_app is still included as data: so it will be built and packaged.",
      "parentUuid": "c8e79770_27695664",
      "revId": "13f0f399c59a8914186d9eb0d746994396eb03b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47e00f2a_f729ae5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1750078
      },
      "writtenOn": "2023-04-27T19:14:32Z",
      "side": 1,
      "message": "cronet_net_tester_app is the app containing the code under test and the code which we want coverage for. So it is not about being built and packaged. It is about being built and packaged with coverage enabled.",
      "parentUuid": "71a1c3fe_b16f5ca6",
      "revId": "13f0f399c59a8914186d9eb0d746994396eb03b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8fc9147_0759b186",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1121894
      },
      "writtenOn": "2023-04-27T19:20:15Z",
      "side": 1,
      "message": "isn\u0027t that a build system bug then ?",
      "parentUuid": "571dc493_2d64ab15",
      "revId": "13f0f399c59a8914186d9eb0d746994396eb03b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db1f3a3e_444ea8dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1124746
      },
      "writtenOn": "2023-04-27T21:12:09Z",
      "side": 1,
      "message": "So it looks like that the coverage variant of the data property is not created/taken by the current module, there might be multiple factors that could cause this, if this is something needed you can open a bug and assign to us to take a further investigation.",
      "parentUuid": "71a1c3fe_b16f5ca6",
      "revId": "13f0f399c59a8914186d9eb0d746994396eb03b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7bc8312_a907de96",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1121894
      },
      "writtenOn": "2023-04-27T21:16:46Z",
      "side": 1,
      "message": "created b/279960392",
      "parentUuid": "db1f3a3e_444ea8dc",
      "revId": "13f0f399c59a8914186d9eb0d746994396eb03b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1b3058d_967b1aa5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1124746
      },
      "writtenOn": "2023-10-03T20:05:31Z",
      "side": 1,
      "message": "I put some comments in this bug, someone needs to verify if this change really affects the native coverage",
      "parentUuid": "a7bc8312_a907de96",
      "revId": "13f0f399c59a8914186d9eb0d746994396eb03b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}