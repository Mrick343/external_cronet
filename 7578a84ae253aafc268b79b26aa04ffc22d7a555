{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d4581cc0_6deddac8",
        "filename": "components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestContextTest.java",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1743321
      },
      "writtenOn": "2023-03-28T16:01:02Z",
      "side": 1,
      "message": "Why are we using this instead of EmbeddedTestServer? Are we missing parts of EmbeddedTestServer in AOSP?",
      "range": {
        "startLine": 93,
        "startChar": 19,
        "endLine": 93,
        "endChar": 57
      },
      "revId": "7578a84ae253aafc268b79b26aa04ffc22d7a555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98d316d2_6498f0fc",
        "filename": "components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestContextTest.java",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1976566
      },
      "writtenOn": "2023-03-28T16:05:43Z",
      "side": 1,
      "message": "It makes more sense to use one testserver in our tests where possible, for uniformity. I plan to upstream this.",
      "parentUuid": "d4581cc0_6deddac8",
      "range": {
        "startLine": 93,
        "startChar": 19,
        "endLine": 93,
        "endChar": 57
      },
      "revId": "7578a84ae253aafc268b79b26aa04ffc22d7a555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a00c48bb_ba877cd0",
        "filename": "components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestContextTest.java",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1743321
      },
      "writtenOn": "2023-03-29T11:49:07Z",
      "side": 1,
      "message": "I think before committing to anything like that we would need to study in detail the current setups, what they offer and why they\u0027re used. Then draft a plan on what we should use for each scenario.\n\nDoes EmbeddedTestServer currently fail/not work in AOSP?",
      "parentUuid": "98d316d2_6498f0fc",
      "range": {
        "startLine": 93,
        "startChar": 19,
        "endLine": 93,
        "endChar": 57
      },
      "revId": "7578a84ae253aafc268b79b26aa04ffc22d7a555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b33b709_b7de009e",
        "filename": "components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestContextTest.java",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1976566
      },
      "writtenOn": "2023-03-29T12:38:48Z",
      "side": 1,
      "message": "EmbeddedTestServer isn\u0027t currently setup in aosp. \n\nBoth run net::test::EmbeddedTestServer but the difference is that EmbeddedTestServer runs the server as a service in a different process. NativeTestServer is in-process and would definitely be faster. \n\nBut yes before upstreaming, we\u0027ll properly consider the effects.",
      "parentUuid": "a00c48bb_ba877cd0",
      "range": {
        "startLine": 93,
        "startChar": 19,
        "endLine": 93,
        "endChar": 57
      },
      "revId": "7578a84ae253aafc268b79b26aa04ffc22d7a555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77d89f5e_eeea7e8e",
        "filename": "components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestContextTest.java",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1743321
      },
      "writtenOn": "2023-03-29T13:40:40Z",
      "side": 1,
      "message": "Okay, SGTM.",
      "parentUuid": "5b33b709_b7de009e",
      "range": {
        "startLine": 93,
        "startChar": 19,
        "endLine": 93,
        "endChar": 57
      },
      "revId": "7578a84ae253aafc268b79b26aa04ffc22d7a555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72fca236_4441b627",
        "filename": "components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestContextTest.java",
        "patchSetId": 1
      },
      "lineNbr": 361,
      "author": {
        "id": 1743321
      },
      "writtenOn": "2023-03-28T16:01:02Z",
      "side": 1,
      "message": "Did you forget to delete this?",
      "range": {
        "startLine": 361,
        "startChar": 4,
        "endLine": 361,
        "endChar": 14
      },
      "revId": "7578a84ae253aafc268b79b26aa04ffc22d7a555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b585cc5f_e23f3864",
        "filename": "components/cronet/android/test/javatests/src/org/chromium/net/CronetUrlRequestContextTest.java",
        "patchSetId": 1
      },
      "lineNbr": 361,
      "author": {
        "id": 1976566
      },
      "writtenOn": "2023-03-28T16:05:43Z",
      "side": 1,
      "message": "Yup, will update when the presubmit is done.",
      "parentUuid": "72fca236_4441b627",
      "range": {
        "startLine": 361,
        "startChar": 4,
        "endLine": 361,
        "endChar": 14
      },
      "revId": "7578a84ae253aafc268b79b26aa04ffc22d7a555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4a2adb0_a8d5c9b5",
        "filename": "net/android/java/src/org/chromium/net/NetworkChangeNotifierAutoDetect.java",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1743321
      },
      "writtenOn": "2023-03-28T16:01:02Z",
      "side": 1,
      "message": "Why is this needed?",
      "range": {
        "startLine": 203,
        "startChar": 4,
        "endLine": 204,
        "endChar": 10
      },
      "revId": "7578a84ae253aafc268b79b26aa04ffc22d7a555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42e7d797_71a8ed50",
        "filename": "net/android/java/src/org/chromium/net/NetworkChangeNotifierAutoDetect.java",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1976566
      },
      "writtenOn": "2023-03-28T16:05:43Z",
      "side": 1,
      "message": "The test class cannot access this method since it\u0027s in the BCP and package-private.",
      "parentUuid": "f4a2adb0_a8d5c9b5",
      "range": {
        "startLine": 203,
        "startChar": 4,
        "endLine": 204,
        "endChar": 10
      },
      "revId": "7578a84ae253aafc268b79b26aa04ffc22d7a555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2393fa9_98451356",
        "filename": "net/android/java/src/org/chromium/net/NetworkChangeNotifierAutoDetect.java",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1743321
      },
      "writtenOn": "2023-03-29T13:40:40Z",
      "side": 1,
      "message": "Both are in org.chromium.net though. Are inner classes with no access modifier not visible to other classes in the same package? How does this work in chromium?\n\nP.S. what\u0027s BCP?",
      "parentUuid": "42e7d797_71a8ed50",
      "range": {
        "startLine": 203,
        "startChar": 4,
        "endLine": 204,
        "endChar": 10
      },
      "revId": "7578a84ae253aafc268b79b26aa04ffc22d7a555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1cf57e2_beaa2b4f",
        "filename": "net/android/java/src/org/chromium/net/NetworkChangeNotifierAutoDetect.java",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1976566
      },
      "writtenOn": "2023-03-29T13:48:39Z",
      "side": 1,
      "message": "BootClassPath. This works in chromium because the classes are staticly linked and in the same apk. Here, we are using the classes in the bootclasspath which means we can\u0027t access anything that is not public.",
      "parentUuid": "e2393fa9_98451356",
      "range": {
        "startLine": 203,
        "startChar": 4,
        "endLine": 204,
        "endChar": 10
      },
      "revId": "7578a84ae253aafc268b79b26aa04ffc22d7a555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b488d25_21162276",
        "filename": "net/android/java/src/org/chromium/net/NetworkChangeNotifierAutoDetect.java",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1743321
      },
      "writtenOn": "2023-03-29T13:53:09Z",
      "side": 1,
      "message": "Ohh, this make sense, thanks for the explanation.\n\nThough, I think metalava is going to stop you from doing this? AFAIU, making this public is equivalent to publishing this as an Android API (since it will be available and accessible from the bootclasspath, as you said), which I don\u0027t think we want (+we\u0027re not allowed to do that).",
      "parentUuid": "d1cf57e2_beaa2b4f",
      "range": {
        "startLine": 203,
        "startChar": 4,
        "endLine": 204,
        "endChar": 10
      },
      "revId": "7578a84ae253aafc268b79b26aa04ffc22d7a555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}